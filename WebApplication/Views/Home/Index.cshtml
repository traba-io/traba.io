@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Common
@model X.PagedList.IPagedList<Domain.Entity.JobOpportunity>
@{
    ViewData["Title"] = "Home Page";
}

<div class="card-deck">
    @foreach (var job in @Model)
    {
        <div class="col-sm-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@job.Title</h5>
                    <p class="card-text">@job.Excerpt</p>
                    <a asp-action="JobOpportunity" asp-route-companyNamespace="@job.Company.Namespace" asp-route-jobOpportunityUri="@job.Uri" class="btn btn-primary">Visualizar</a>
                </div>
                <div class="card-footer">
                    <a asp-action="Company" asp-route-companyNamespace="@job.Company.Namespace">
                        <small class="text-muted float-left">
                            @if (!(job.Company.ProfilePicture is null))
                            {
                                <img src="@job.Company.ProfilePicture" class="img-circle" width="33" alt="@job.Company.Name">
                            }
                            @job.Company.Name
                        </small>
                    </a>
                    <small class="text-muted float-right">@job.CreatedDate</small>
                </div>
            </div>
        </div>
    }
</div>

<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("Index", new {pageIndex = page}),
            new PagedListRenderOptions
            {
                LinkToPreviousPageFormat = "Anterior",
                LinkToFirstPageFormat = "Primeira",
                LinkToNextPageFormat = "Próximo",
                LinkToLastPageFormat = "Ultima",
                LiElementClasses = new string[] {"page-item"},
                PageClasses = new string[] {"page-link"}
            })
    </ul>
</nav>